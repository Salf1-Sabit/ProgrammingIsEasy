export const LANGUAGE_VERSIONS = {
  bash: "5.2.0",
  brainfuck: "2.7.3",
  cjam: "0.6.5",
  clojure: "1.10.3",
  cobol: "3.1.2",
  coffeescript: "2.5.1",
  crystal: "0.36.1",
  dart: "2.19.6",
  dash: "0.5.11",
  typescript: "5.0.3",
  javascript: "18.15.0",
  "basic.net": "5.0.201",
  "fsharp.net": "5.0.201",
  "csharp.net": "5.0.201",
  fsi: "5.0.201",
  elixir: "1.11.3",
  forth: "0.7.3",
  freebasic: "1.9.0",
  awk: "5.1.0",
  c: "10.2.0",
  "c++": "10.2.0",
  d: "10.2.0",
  fortran: "10.2.0",
  go: "1.16.2",
  golfscript: "1.0.0",
  groovy: "3.0.7",
  haskell: "9.0.1",
  iverilog: "11.0.0",
  java: "15.0.2",
  jelly: "0.1.31",
  julia: "1.8.5",
  kotlin: "1.8.20",
  lisp: "2.1.2",
  lolcode: "0.11.2",
  lua: "5.4.4",
  csharp: "6.12.0",
  basic: "6.12.0",
  nasm: "2.15.5",
  nasm64: "2.15.5",
  nim: "1.6.2",
  ocaml: "4.12.0",
  octave: "8.1.0",
  osabie: "1.0.1",
  paradoc: "0.6.0",
  pascal: "3.2.2",
  perl: "5.36.0",
  php: "8.2.3",
  prolog: "8.2.4",
  powershell: "7.1.4",
  pyth: "1.0.0",
  python2: "2.7.18",
  python: "3.10.0",
  racket: "8.3.0",
  raku: "6.100.0",
  rscript: "4.1.1",
  ruby: "3.0.1",
  rust: "1.68.2",
  sqlite3: "3.36.0",
  swift: "5.3.3",
  vlang: "0.3.3",
  yeethon: "3.10.0",
};

export const CODE_SNIPPETS = {
  bash: `#!/bin/bash\n\necho "Hello, World!"`,
  brainfuck: `+[----->+++<]>.---.+++++++..+++.[--->+<]>-----.--[--->+++<]>.-`,
  cjam: `"Hello, World!"`,
  clojure: `(println "Hello, World!")`,
  cobol: `IDENTIFICATION DIVISION.\nPROGRAM-ID. HELLO-WORLD.\nPROCEDURE DIVISION.\nDISPLAY 'Hello, World!'.`,
  coffeescript: `console.log "Hello, World!"`,
  crystal: `puts "Hello, World!"`,
  dart: `void main() {\n  print('Hello, World!');\n}`,
  dash: `#!/bin/dash\n\necho "Hello, World!"`,
  typescript: `console.log("Hello, World!");`,
  javascript: `console.log("Hello, World!");`,
  "basic.net": `Module Program\n    Sub Main()\n        Console.WriteLine("Hello, World!")\n    End Sub\nEnd Module`,
  "fsharp.net": `printfn "Hello, World!"`,
  "csharp.net": `using System;\n\nclass Program\n{\n    static void Main()\n    {\n        Console.WriteLine("Hello, World!");\n    }\n}`,
  fsi: `printfn "Hello, World!"`,
  elixir: `IO.puts "Hello, World!"`,
  forth: `." Hello, World!"`,
  freebasic: `Print "Hello, World!"`,
  awk: `BEGIN { print "Hello, World!" }`,
  c: `#include <stdio.h>\n\nint main() {\n    printf("Hello, World!\\n");\n    return 0;\n}`,
  "c++": `#include <iostream>\n\nint main() {\n    std::cout << "Hello, World!" << std::endl;\n    return 0;\n}`,
  d: `import std.stdio;\n\nvoid main() {\n    writeln("Hello, World!");\n}`,
  fortran: `program hello\n    print *, "Hello, World!"\nend program hello`,
  go: `package main\n\nimport "fmt"\n\nfunc main() {\n    fmt.Println("Hello, World!")\n}`,
  golfscript: `"Hello, World!"`,
  groovy: `println "Hello, World!"`,
  haskell: `main = putStrLn "Hello, World!"`,
  iverilog: `module hello;\ninitial begin\n    $display("Hello, World!");\n    $finish;\nend\nendmodule`,
  java: `public class HelloWorld {\n    public static void main(String[] args) {\n        System.out.println("Hello, World!");\n    }\n}`,
  jelly: `“Hello, World!`,
  julia: `println("Hello, World!")`,
  kotlin: `fun main() {\n    println("Hello, World!")\n}`,
  lisp: `(print "Hello, World!")`,
  lolcode: `HAI 1.2\n\nCAN HAS STDIO?\nVISIBLE "HAI WORLD!"\n\nKTHXBYE`,
  lua: `print("Hello, World!")`,
  csharp: `using System;\n\npublic class HelloWorld\n{\n    public static void Main(string[] args)\n    {\n        Console.WriteLine("Hello, World!");\n    }\n}`,
  basic: `Module Hello\n    Sub Main()\n        Console.WriteLine("Hello, World!")\n    End Sub\nEnd Module`,
  nasm: `section .data\n    msg db 'Hello, World!', 0\n\nsection .text\n    global _start\n\n_start:\n    mov edx, 13\n    mov ecx, msg\n    mov ebx, 1\n    mov eax, 4\n    int 0x80\n    mov eax, 1\n    int 0x80`,
  nasm64: `section .data\n    msg db 'Hello, World!', 0\n\nsection .text\n    global _start\n\n_start:\n    mov rdx, 13\n    mov rsi, msg\n    mov rdi, 1\n    mov rax, 1\n    syscall\n    mov rax, 60\n    syscall`,
  nim: `echo "Hello, World!"`,
  ocaml: `print_endline "Hello, World!";;`,
  octave: `printf("Hello, World!\\n");`,
  osabie: `"Hello, World!"↰`,
  paradoc: `"Hello, World!"\n`,
  pascal: `program Hello;\nbegin\n    writeln('Hello, World!');\nend.`,
  perl: `print "Hello, World!\\n";`,
  php: `<?php\n\necho "Hello, World!";\n`,
  prolog: `:- initialization(main).\n\nmain :- write('Hello, World!'), nl.\n`,
  powershell: `Write-Host "Hello, World!"`,
  pyth: `."Hello, World!"`,
  python2: `print "Hello, World!"`,
  python: `print("Hello, World!")`,
  racket: `#lang racket\n\n(displayln "Hello, World!")`,
  raku: `say "Hello, World!";`,
  rscript: `cat("Hello, World!\\n")`,
  ruby: `puts "Hello, World!"`,
  rust: `fn main() {\n    println!("Hello, World!");\n}`,
  sqlite3: `.print "Hello, World!"`,
  swift: `print("Hello, World!")`,
  vlang: `println("Hello, World!")`,
  yeethon: `print("Hello, World!")`,
};
